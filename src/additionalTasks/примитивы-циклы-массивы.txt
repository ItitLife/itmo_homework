Дополнительные задачи (массивы / циклы)

1) В переменной n хранится натуральное трёхзначное число. Создайте программу, вычисляющую и выводящую на экран сумму цифр числа n.

2) Создать программу, выводящую на экран ближайшее к 10 из двух чисел, записанных в переменные m и n. 
Например, среди чисел 8,5 и 11,45 ближайшее к десяти 11,45.

3) Создать программу, выводящую на экран случайно сгенерированное трёхзначное натуральное число и его наибольшую цифру

4) Для введённого пользователем с клавиатуры натурального числа посчитайте сумму всех его цифр 
(заранее не известно сколько цифр будет в числе).

5) В три переменные a, b и c явно записаны программистом три целых попарно неравных между собой числа. 
Создать программу, которая переставит числа в переменных таким образом, 
чтобы при выводе на экран последовательность a, b и c оказалась строго возрастающей

6) На некотором предприятии инженер Петров создал устройство, на табло которого показывается количество секунд, оставшихся до конца рабочего дня. 
Когда рабочий день начинается ровно в 9 часов утра — табло отображает «28800» (т.е. остаётся 8 часов), когда времени 14:30 — на табло «9000» 
(т.е. остаётся два с половиной часа), а когда наступает 17 часов — на табло отображается «0» (т.е. рабочий день закончился).
Программист Иванов заметил, как страдают офисные сотрудницы — им неудобно оценивать остаток рабочего дня в секундах. 
Иванов вызвался помочь сотрудницам и написать программу, которая вместо секунд будет выводить на табло понятные фразы с информацией о том, 
сколько полных часов осталось до конца рабочего дня. Например: «осталось 7 часов», «осталось 4 часа», «остался 1 час», «осталось менее часа».
Итак, в переменную n должно записываться случайное (на время тестирования программы) целое число из [0;28800], 
далее оно должно выводиться на экран (для Петрова) и на следующей строке (для сотрудниц) должна выводиться фраза о количестве полных часов, содержащихся в n секундах

Примеры работы программы:
23466
Осталось 6 часов

10644
Осталось 2 часа

5891
Остался 1 час

1249
Осталось менее часа

7) Выведите на экран первые 11 членов последовательности Фибоначчи. 
Первый и второй члены последовательности равны единицам, а каждый следующий — сумме двух предыдущих

8) В городе N проезд в трамвае осуществляется по бумажным отрывным билетам. Каждую неделю трамвайное депо заказывает в местной типографии рулон 
билетов с номерами от 000001 до 999999. «Счастливым» считается билетик у которого сумма первых трёх цифр номера равна сумме последних трёх цифр, как, 
например, в билетах с номерами 003102 или 567576. Трамвайное депо решило подарить сувенир обладателю каждого счастливого билета и теперь раздумывает, 
как много сувениров потребуется. С помощью программы подсчитайте сколько счастливых билетов в одном рулоне?

9) В городе N есть большой склад на котором существует 50000 различных полок. Для удобства работников руководство склада решило заказать для каждой полки 
табличку с номером от 00001 до 50000 в местной типографии, но когда таблички напечатали, оказалось что печатный станок из-за неисправности не печатал цифру 2, 
поэтому все таблички, в номерах которых содержалась одна или более двойка (например, 00002 или 20202) — надо перепечатывать. 
Напишите программу, которая подсчитает сколько всего таких ошибочных табличек оказалось в бракованной партии.

10) Электронные часы показывают время в формате от 00:00 до 23:59. Подсчитать сколько раз за сутки случается так, 
что слева от двоеточия показывается симметричная комбинация для той, что справа от двоеточия (например, 02:20, 11:11 или 15:51).

11) В американской армии считается несчастливым число 13, а в японской — 4. Перед международными учениями штаб российской армии решил исключить номера боевой техники,
содержащие числа 4 или 13 (например, 40123, 13313, 12345 или 13040), чтобы не смущать иностранных коллег. 
Если в распоряжении армии имеется 100 тыс. единиц боевой техники и каждая боевая машина имеет номер от 00001 до 99999, то сколько всего номеров придётся исключить?

12) Создайте массив из 8 случайных целых чисел из отрезка [1;10]. Выведите массив на экран в строку. Замените каждый элемент с нечётным индексом на ноль. 
Снова выведете массив на экран на отдельной строке.

13) Создайте массив из 4 случайных целых чисел из отрезка [10;99], выведите его на экран в строку. Определить и вывести на экран сообщение о том, 
является ли массив строго возрастающей последовательностью.

14) Создайте два массива из 10 целых случайных чисел из отрезка [1;9] и третий массив из 10 действительных чисел. 
Каждый элемент с i-ым индексом третьего массива должен равняться отношению элемента из первого массива с i-ым индексом к элементу из второго массива с i-ым индексом. 
Вывести все три массива на экран (каждый на отдельной строке), затем вывести количество целых элементов в третьем массиве.

15) Пользователь должен указать с клавиатуры чётное положительное число, а программа должна создать массив указанного размера из случайных целых чисел из [-5;5] 
и вывести его на экран в строку. После этого программа должна определить и сообщить пользователю о том, 
сумма модулей какой половины массива больше: левой или правой, либо сообщить, что эти суммы модулей равны. 
Если пользователь введёт неподходящее число, то программа должна требовать повторного ввода до тех пор, пока не будет указано корректное значение.

16) Создать двумерный массив из 5 строк по 8 столбцов в каждой из случайных целых чисел из отрезка [-99;99]. 
Вывести массив на экран. После на отдельной строке вывести на экран значение максимального элемента этого массива (его индекс не имеет значения).

17) Для проверки остаточных знаний учеников после летних каникул, учитель младших классов решил начинать каждый урок с того, 
чтобы задавать каждому ученику пример из таблицы умножения, но в классе 15 человек, а примеры среди них не должны повторяться. 
В помощь учителю напишите программу, которая будет выводить на экран 15 случайных примеров из таблицы умножения 
(от 2*2 до 9*9, потому что задания по умножению на 1 и на 10 — слишком просты). При этом среди 15 примеров не должно быть повторяющихся 
(примеры 2*3 и 3*2 и им подобные пары считать повторяющимися).